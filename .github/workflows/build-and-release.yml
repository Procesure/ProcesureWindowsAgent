name: Build and Release EXE for Windows

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: windows-latest

    permissions:
      contents: write  # Ensure the token has write access to create releases

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        if (Test-Path requirements.txt) {
          pip install -r requirements.txt
        }

    - name: Add Python Scripts to PATH
      run: |
        $env:PATH += ";$env:USERPROFILE\.local\bin"
        $env:PATH += ";$env:APPDATA\Python\Python${{ matrix.python-version }}\Scripts"

    - name: Build EXE
      run: |
        pyinstaller --onefile main.py
      env:
        PYTHONPATH: ${{ runner.workspace }}

    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        body: |
          Automatic release of the executable for Windows.
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: dist/main.exe
        asset_name: main.exe
        asset_content_type: application/octet-stream
